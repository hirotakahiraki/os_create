     1 00000000                                 ; haribote-os boot asm
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4 00000000                                 ;[INSTRSET "i486p"]
     5 00000000                                 
     6  = 00000105                              VBEMODE EQU		0x105
     7 00000000                                 	;0x101  640* 480  
     8 00000000                                 	;0x103  800* 600  
     9 00000000                                 	;0x105 1024* 768  
    10 00000000                                 	;0x107 1280*1024
    11 00000000                                 
    12  = 00280000                              BOTPAK	EQU		0x00280000		; bootpackのロード先
    13  = 00100000                              DSKCAC	EQU		0x00100000		; ディスクキャッシュの場所
    14  = 00008000                              DSKCAC0	EQU		0x00008000		; ディスクキャッシュの場所(リアルモード)
    15 00000000                                 
    16 00000000                                 ; BOOT_INFO関係
    17  = 00000FF0                              CYLS	EQU		0x0ff0			; ブートセクタが設定する
    18  = 00000FF1                              LEDS	EQU		0x0ff1
    19  = 00000FF2                              VMODE	EQU		0x0ff2			; 色数に関する情報
    20  = 00000FF4                              SCRNX	EQU		0x0ff4			; 解像度のX
    21  = 00000FF6                              SCRNY	EQU		0x0ff6			; 解像度のY
    22  = 00000FF8                              VRAM	EQU		0x0ff8			; グラフィックバッファの開始番地
    23 00000000                                 
    24                                          		ORG		0xc200			; このプログラムがどこに読まれるのか
    25 0000C200                                 
    26 0000C200                                 ; VBE存在確認
    27 0000C200 B8 9000                         		MOV		AX,0x9000
    28 0000C203 8E C0                           		MOV		ES,AX
    29 0000C205 BF 0000                         		MOV		DI,0
    30 0000C208 B8 4F00                         		MOV		AX,0x4f00
    31 0000C20B                                 		MOV		0x10
      >> [ERROR #002] parameter error.
    32 0000C20B 3D 004F                         		CMP		AX,0x004f
    33 0000C20E 75 4A                           		JNE		scrn320
    34 0000C210                                 
    35 0000C210                                 ; VBEバージョンチェック
    36 0000C210 26 8B 45 04                     		MOV		AX,[ES:DI+4]
    37 0000C214 3D 0200                         		CMP		AX,0x0200
    38 0000C217 72 41                           		JB		scrn320
    39 0000C219                                 	
    40 0000C219                                 ; 画面モード情報を得る
    41 0000C219 B9 0105                         		MOV		CX,VBEMODE
    42 0000C21C B8 4F01                         		MOV		AX,0x4f01
    43 0000C21F CD 10                           		INT		0x10
    44 0000C221 3D 004F                         		CMP		AX,0x004f
    45 0000C224 75 34                           		JNE		scrn320
    46 0000C226                                 
    47 0000C226                                 ;画面モード情報の確認
    48 0000C226 26 80 7D 19 08                  		CMP 	BYTE [ES:DI+0x19],8
    49 0000C22B 75 2D                           		JNE		scrn320
    50 0000C22D 26 80 7D 1B 04                  		CMP		BYTE [ES:DI+0x1b],4
    51 0000C232 75 26                           		JNE		scrn320
    52 0000C234 26 8B 05                        		MOV		AX,[ES:DI+0x00]
    53 0000C237 25 0080                         		AND		AX,0x0080
    54 0000C23A 74 1E                           		JZ		scrn320
    55 0000C23C                                 
    56 0000C23C                                 ; 画面モードの切り替え
    57 0000C23C BB 4105                         		MOV		BX,VBEMODE+0x4000
    58 0000C23F B8 4F02                         		MOV		AX,0x4f02
    59 0000C242 CD 10                           		INT 	0x10
    60 0000C244 C6 06 0FF2 08                   		MOV		BYTE [VMODE],8
    61 0000C249 26 8B 45 12                     		MOV		AX,[ES:DI+0x12]
    62 0000C24D A3 0FF4                         		MOV		[SCRNX],AX
    63 0000C250 26 8B 45 14                     		MOV		AX,[ES:DI+0x14]
    64 0000C254 A3 0FF6                         		MOV		[SCRNY],AX
    65 0000C257 26                              		MOV		EAX,[ES:DI+0x28]
      >> [ERROR #004] data type error.
    66 0000C258                                 		MOV		[VRAM],EAX
      >> [ERROR #003] data size error.
    67 0000C258 EB 22                           		JMP		keystatus
    68 0000C25A                                 
    69 0000C25A                                 scrn320:
    70 0000C25A                                 		;最小値 >> MOV		AL,0x13  MOV		AH,0x00
    71 0000C25A BB 4103                         		MOV		BX,0x4103
    72 0000C25D B8 4F02                         		MOV 	AX,0x4f02
    73 0000C260 CD 10                           		INT		0x10
    74 0000C262 C6 06 0FF2 08                   		MOV		BYTE [VMODE],8
    75 0000C267 C7 06 0FF4 0320                 		MOV		WORD [SCRNX],800
    76 0000C26D C7 06 0FF6 0258                 		MOV		WORD [SCRNY],600
    77 0000C273 66 C7 06 0FF8 FD000000          		MOV		DWORD [VRAM],0xfd000000
    78 0000C27C                                 	
    79 0000C27C                                 keystatus:
    80 0000C27C B4 02                           		MOV		AH,0x02
    81 0000C27E CD 16                           		INT 	0x16	;keyboard BIOS
    82 0000C280 A2 0FF1                         		MOV		[LEDS],AL
    83 0000C283                                 
    84 0000C283                                 
    85 0000C283                                 ; 	PICが一切の割り込みを受けつけないようにする。
    86 0000C283                                 ;	AT互換機の仕様では,PICの初期化をするなら、
    87 0000C283                                 ;	こいつをCLI前にやっておかないとたまにハングアップする。
    88 0000C283                                 ;	PICの初期化は後でやる。
    89 0000C283                                 
    90 0000C283 B0 FF                           		MOV		AL,0xff
    91 0000C285 E6 21                           		OUT		0x21,AL
    92 0000C287 90                              		NOP						; OUT命令を連続させるとうまくいかない権限があるらしいので。
    93 0000C288 E6 A1                           		OUT		0xa1,AL
    94 0000C28A                                 
    95 0000C28A FA                              		CLI						; さらにCPUレベルでも割り込み禁止。
    96 0000C28B                                 
    97 0000C28B                                 ; CPUから1MB以上のメモリにアクセスできるようにA20GATEを設定。
    98 0000C28B                                 
    99 0000C28B E8 00B5                         		CALL	waitkbdout
   100 0000C28E B0 D1                           		MOV		AL,0xd1
   101 0000C290 E6 64                           		OUT		0x64,AL
   102 0000C292 E8 00AE                         		CALL	waitkbdout
   103 0000C295 B0 DF                           		MOV		AL,0xdf			; enable A20
   104 0000C297 E6 60                           		OUT		0x60,AL
   105 0000C299 E8 00A7                         		CALL	waitkbdout
   106 0000C29C                                 
   107 0000C29C                                 ; プロテクトモード移行
   108 0000C29C                                 
   109 0000C29C                                 [INSTRSET "i486p"]				; 486の命令まで使いたいという記述
   110 0000C29C                                 
   111 0000C29C 0F 01 16 C38A                   		LGDT	[GDTR0]			; 暫定GDTを設定
   112 0000C2A1 0F 20 C0                        		MOV		EAX,CR0
   113 0000C2A4 66 25 7FFFFFFF                  		AND		EAX,0x7fffffff	; bit31を0にする(ページング禁止のため)
   114 0000C2AA 66 83 C8 01                     		OR		EAX,0x00000001	; bit0を1にする(プロテクトモード禁止のため)
   115 0000C2AE 0F 22 C0                        		MOV		CR0,EAX
   116 0000C2B1 EB 00                           		JMP		pipelineflush
   117 0000C2B3                                 
   118 0000C2B3                                 pipelineflush:
   119 0000C2B3 B8 0008                         		MOV		AX,1*8			;  読み書き可能セグメント32bit
   120 0000C2B6 8E D8                           		MOV		DS,AX
   121 0000C2B8 8E C0                           		MOV		ES,AX
   122 0000C2BA 8E E0                           		MOV		FS,AX
   123 0000C2BC 8E E8                           		MOV		GS,AX
   124 0000C2BE 8E D0                           		MOV		SS,AX
   125 0000C2C0                                 
   126 0000C2C0                                 ; bootpack転送
   127 0000C2C0                                 
   128 0000C2C0 66 BE 0000C390                  		MOV		ESI,bootpack	; 転送元
   129 0000C2C6 66 BF 00280000                  		MOV		EDI,BOTPAK		; 転送先
   130 0000C2CC 66 B9 00020000                  		MOV		ECX,512*1024/4
   131 0000C2D2 E8 0077                         		CALL	memcpy
   132 0000C2D5                                 
   133 0000C2D5                                 ; ついでにディスクデータも本来の位置へ転送
   134 0000C2D5                                 
   135 0000C2D5                                 ; まずはブートセクタから
   136 0000C2D5                                 
   137 0000C2D5 66 BE 00007C00                  		MOV		ESI,0x7c00		; 転送元
   138 0000C2DB 66 BF 00100000                  		MOV		EDI,DSKCAC		; 転送先
   139 0000C2E1 66 B9 00000080                  		MOV		ECX,512/4
   140 0000C2E7 E8 0062                         		CALL	memcpy
   141 0000C2EA                                 
   142 0000C2EA                                 ; 残り全部
   143 0000C2EA                                 
   144 0000C2EA 66 BE 00008200                  		MOV		ESI,DSKCAC0+512	; 転送元
   145 0000C2F0 66 BF 00100200                  		MOV		EDI,DSKCAC+512	; 転送先
   146 0000C2F6 66 B9 00000000                  		MOV		ECX,0
   147 0000C2FC 8A 0E 0FF0                      		MOV		CL,BYTE [CYLS]
   148 0000C300 66 69 C9 00001200               		IMUL	ECX,512*18*2/4	; シリンダ数からバイト数/4に変換
   149 0000C307 66 81 E9 00000080               		SUB		ECX,512/4		; IPLの分だけ差し引く
   150 0000C30E E8 003B                         		CALL	memcpy
   151 0000C311                                 
   152 0000C311                                 ; asmheadでしなければならないことは全部し終わったので、
   153 0000C311                                 ;	あとはbootpackにまかせる
   154 0000C311                                 
   155 0000C311                                 ; bootpackの起動
   156 0000C311                                 
   157 0000C311 66 BB 00280000                  		MOV		EBX,BOTPAK
   158 0000C317 67 66 8B 4B 10                  		MOV		ECX,[EBX+16]
   159 0000C31C 66 83 C1 03                     		ADD		ECX,3			; ECX += 3;
   160 0000C320 66 C1 E9 02                     		SHR		ECX,2			; ECX /= 4;
   161 0000C324 74 10                           		JZ		skip			; 転送するべきものがない
   162 0000C326 67 66 8B 73 14                  		MOV		ESI,[EBX+20]	; 転送元
   163 0000C32B 66 01 DE                        		ADD		ESI,EBX
   164 0000C32E 67 66 8B 7B 0C                  		MOV		EDI,[EBX+12]	; 転送先
   165 0000C333 E8 0016                         		CALL	memcpy
   166 0000C336                                 skip:
   167 0000C336 67 66 8B 63 0C                  		MOV		ESP,[EBX+12]	; スタック初期値
   168 0000C33B 66 EA 0000001B 0010             		JMP		DWORD 2*8:0x0000001b
   169 0000C343                                 
   170 0000C343                                 waitkbdout:
   171 0000C343 E4 64                           		IN		 AL,0x64
   172 0000C345 24 02                           		AND		 AL,0x02
   173 0000C347 E4 60                           		IN 		 AL,0x60		; から読み(受信バッファが悪さをしないように)
   174 0000C349 75 F8                           		JNZ		waitkbdout		; ANDの結果が0でなければwaitbdoutへ
   175 0000C34B C3                              		RET
   176 0000C34C                                 
   177 0000C34C                                 memcpy:
   178 0000C34C 67 66 8B 06                     		MOV		EAX,[ESI]
   179 0000C350 66 83 C6 04                     		ADD		ESI,4
   180 0000C354 67 66 89 07                     		MOV		[EDI],EAX
   181 0000C358 66 83 C7 04                     		ADD		EDI,4
   182 0000C35C 66 83 E9 01                     		SUB		ECX,1
   183 0000C360 75 EA                           		JNZ		memcpy			; 引き算した結果が0でなければmemcpyへ
   184 0000C362 C3                              		RET
   185 0000C363                                 ; memcpyはアドレスサイズプリフィクスを入れ忘れなければ、ストリング命令でも書ける。
   186 0000C363                                 
   187 0000C363 00 00 00 00 00 00 00 00 00 00   		ALIGNB	16
       0000C36D 00 00 00 
   188 0000C370                                 GDT0:
   189 0000C370 00 00 00 00 00 00 00 00         		RESB	8				; ヌルセレクタ
   190 0000C378 FFFF 0000 9200 00CF             		DW		0xffff,0x0000,0x9200,0x00cf	; 読み書き可能セグメント32bit
   191 0000C380 FFFF 0000 9A28 0047             		DW		0xffff,0x0000,0x9a28,0x0047	; 実行可能セグメント32bit(bootpack用)
   192 0000C388                                 
   193 0000C388 0000                            		DW		0
   194 0000C38A                                 GDTR0:
   195 0000C38A 0017                            		DW		8*3-1
   196 0000C38C 0000C370                        		DD		GDT0
   197 0000C390                                 
   198 0000C390                                 		ALIGNB	16
   199 0000C390                                 bootpack:
